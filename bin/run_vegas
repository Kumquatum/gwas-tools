#!/usr/bin/env nextflow

params.out = '.'

params.gencode = 28
params.genome = 'GRCh38'
params.vegas_params = '-upper 50000 -lower 50000'
params.covar = ''

bed = file(params.bed)
bim = file(params.bim)
fam = file(params.fam)


process download_hgnc {

    output:
        file 'non_alt_loci_set.txt' into hgnc

    script:
    template 'dbs/hgnc.sh'
    
}

process download_gencode {

    input:
        val GENCODE_VERSION from params.gencode
        val GENOME_VERSION from params.genome

    output:
        file 'gff3' into gff
    
    script:
    template 'dbs/gencode.sh'

}

process create_ensembl_glist {

    input:
        file gff

    output:
        file 'glist_ensembl' into glist_ensembl

    """
    awk '\$3 == "gene"' $gff >genes.gff
    gff2bed < genes.gff | cut -f1-4 | sed 's/\\.[^\\t]\\+\$//' | sed 's/^chr//' >tmp
    sed 's/^XY/25/' tmp | sed 's/^X/23/' | sed 's/^Y/24/' | sed 's/^M/26/' | awk '\$1 <= 24' >glist_ensembl
    """

}

process convert_glist_to_hgnc {

    input:
        file glist_ensembl
        file hgnc

    output:
        file 'glist_hgnc' into glist_hgnc

    """
    #!/usr/bin/env Rscript
    library(tidyverse)
	
    ensembl2hgnc <- read_tsv('$hgnc') %>%
		select(symbol, ensembl_gene_id)

    read_tsv('$glist_ensembl', col_names=F, col_types = 'ciic') %>% 
        filter(!is.na(X1)) %>%
        inner_join(ensembl2hgnc, by = c('X4' = 'ensembl_gene_id')) %>% 
        select(-X4) %>%
        write_delim('glist_hgnc', col_names = FALSE)
    """

}

if (params.covar == '') {

    process compute_chisq {

        input:
            file BED from bed
            file BIM from bim
            file FAM from fam

        output:
            file 'snp_association' into snp_association

        """
        plink --bed ${BED} --bim ${BIM} --fam ${FAM} --assoc 
        awk 'NR > 1 && \$9 != "NA" { print \$2,\$9 }' OFS='\\t' plink.assoc  >snp_association
        """

    }

} else {

    covar = file(params.covar)

    process regress_phenotypes_with_covars {

        input:
            file BED from bed
            file BIM from bim
            file FAM from fam
            file COVAR from covar

        output:
            file 'snp_association' into snp_association

        """
        plink --bed ${BED} --bim ${BIM} --fam ${FAM} --logistic --covar ${COVAR}
        awk 'NR > 1 && \$5 == "ADD" && \$9 != "NA" { print \$2,\$9 }' OFS='\\t' plink.assoc.logistic >snp_association
        """

    }

}

process run_vegas {

    publishDir "$params.out", overwrite: true, mode: "copy"

    input:
        file BED from bed
        file bim
        file fam
        file SNPASSOCIATION from snp_association
        file GLIST from glist_hgnc
        val VEGAS_PARAMS from params.vegas_params

    output:
        file 'scored_genes.vegas.txt'

    """
    vegas2v2 -G -snpandp ${SNPASSOCIATION} -custom `pwd`/${BED.baseName} -glist ${GLIST} -out scored_genes ${VEGAS_PARAMS}
    sed 's/"//g' scored_genes.out | sed 's/ /\\t/g' >tmp
    mv tmp scored_genes.vegas.txt
    """

}
