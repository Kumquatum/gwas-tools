#!/usr/bin/env nextflow

params.out = '.'

ped1 = file(params.ped1)
map1 = file(params.map1)
ped2 = file(params.ped2)
map2 = file(params.map2)

input_files = Channel.from ( [ped1,map1], [ped2,map2] )

process set_phenotypes {

    input:
        set file(PED), file(MAP) from input_files
        val Y from 1..2

    output:
        file MAP into maps
        file 'new_phenotype.ped' into peds

    script:
    """
    awk '{\$6 = "$Y"; print}' $PED >new_phenotype.ped
    """

}

process merge_datasets {

    clusterOptions = '-V -jc pcc-skl'

    input:
        file 'map*' from maps. collect()
        file 'ped*' from peds. collect()

    output:
        file 'merged.ped' into ped
        file 'merged.map' into map

    """
    plink --ped ped1 --map map1 --merge ped2 map2 --allow-extra-chr --allow-no-sex --recode --out merged
    """

}

process compute_association {

    publishDir "$params.out", overwrite: true, mode: "copy"

    input:
        file ped
        file map

    output:
        file 'univariate_association.tsv'

    """
    plink --ped $ped --map $map --allow-extra-chr --allow-no-sex --model fisher 
    sed 's/^ \\+//' plink.model | sed 's/ \\+/\\t/g' >univariate_association.tsv
    """

}