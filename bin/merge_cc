#!/usr/bin/env nextflow

params.out = '.'

bed1 = file(params.file1)
bim1 = file("${bed1.baseName}.bim")
fam1 = file("${bed1.baseName}.fam")
bed2 = file(params.file2)
bim2 = file("${bed2.baseName}.bim")
fam2 = file("${bed2.baseName}.fam")

input_files = Channel.from ( [bed1, bim1, fam1], [bed2, bim2, fam2] )

params.plink_params = '--extract intersection'

process set_phenotypes {

    input:
        set file(BED), file(BIM), file(FAM) from input_files
        val Y from 1..2

    output:
        file BED into beds
        file BIM into bims
        file 'new_phenotype.fam' into fams

    script:
    """
    awk '{\$6 = "$Y"; print}' $FAM >new_phenotype.fam
    """

}

process merge_datasets {

    publishDir "$params.out", overwrite: true, mode: "move"

    input:
        file 'bed*' from beds. collect()
        file 'bim*' from bims. collect()
        file 'fam*' from fams. collect()
        val PLINK_PARAMS from params.plink_params

    output:
        file 'merged.bed' into bed
        file 'merged.bim' into bim
        file 'merged.fam' into fam

    """
    cut -f2 bim1 bim2 | sort | uniq -c | awk '\$1 == 2 {print \$2}' >intersection
    plink --bed bed1 --bim bim1 --fam fam1 --bmerge bed2 bim2 fam2 ${PLINK_PARAMS} --make-bed --out merged
    """

}